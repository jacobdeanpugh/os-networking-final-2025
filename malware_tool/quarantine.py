import os
import shutil
import logging

logger = logging.getLogger(__name__)

class Quarantine:
    def __init__(self, db_handler, quarantine_dir="quarantine"):
        self.db_handler = db_handler
        self.quarantine_dir = quarantine_dir
        os.makedirs(self.quarantine_dir, exist_ok=True)

    def isolate_file(self, file_path: str):
        if not os.path.exists(file_path):
            logger.warning(f"Tried to quarantine missing file: {file_path}")
            return

        try:
            filename = os.path.basename(file_path)
            quarantine_path = os.path.join(self.quarantine_dir, filename)

            shutil.move(file_path, quarantine_path)
            logger.info(f"Quarantined {file_path} -> {quarantine_path}")

            self.db_handler.insert_quarantine_record(
                original_path=file_path,
                quarantined_path=quarantine_path,
                removed=False
            )
        except Exception as e:
            logger.error(f"Failed to quarantine {file_path}: {e}")
